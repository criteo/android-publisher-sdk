name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  java-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Store Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.7

      # This cache below is not fully working: it should go above the "Set up Android SDK" but:
      # - The action does not support having a SDK already setup -> platform-tools, licenses are re-downloaded
      # - Having this cache still prevents Gradle to re-download every time the build-tools.
      - name: Store Android SDK
        uses: actions/cache@v2
        with:
          path: ${{ env.ANDROID_HOME }}
          key: ${{ runner.os }}-android-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-android-

      - name: Build & Run Java tests
        run: ./gradlew build assembleAndroidTest

      - name: Junit Report to Annotations
        uses: ashley-taylor/junit-report-annotations-action@1.3
        if: failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JUnit report
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: junit-report
          path: "**/build/reports/tests"

  android-tests:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Store Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.7

      - name: Run Android tests
        uses: malinskiy/action-android/emulator-run-cmd@release/0.0.7
        with:
          api: 29
          tag: google_apis
          cmd: ./gradlew :publisher-sdk-tests:connectedCheck
          # Use a medium size skin rather than default size. Some tests need to have a decent size.
          cmdOptions: -no-snapshot-save -noaudio -no-boot-anim -skin 360x640

      - name: Upload logcat output
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: logcat
          path: artifacts/logcat.log

      - name: Junit Report to Annotations
        uses: ashley-taylor/junit-report-annotations-action@1.3
        if: failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JUnit report
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: junit-report
          path: "**/build/reports/androidTests"

  deploy-development-artifacts:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    needs:
      - java-tests
      - android-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.7

      - name: Deploy artifacts and notify on Slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
        run: ./gradlew bintrayUpload sendReleaseDeployedToBintrayMessageToSlack